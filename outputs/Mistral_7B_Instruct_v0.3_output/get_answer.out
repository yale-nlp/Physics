INFO 02-09 16:11:02 __init__.py:183] Automatically detected platform cuda.
INFO 02-09 16:11:09 config.py:520] This model supports multiple tasks: {'embed', 'reward', 'classify', 'score', 'generate'}. Defaulting to 'generate'.
INFO 02-09 16:11:09 config.py:1328] Defaulting to use mp for distributed inference
INFO 02-09 16:11:09 llm_engine.py:232] Initializing an LLM engine (v0.7.0) with config: model='mistralai/Mistral-7B-Instruct-v0.3', speculative_config=None, tokenizer='mistralai/Mistral-7B-Instruct-v0.3', skip_tokenizer_init=False, tokenizer_mode=mistral, revision=None, override_neuron_config=None, tokenizer_revision=None, trust_remote_code=True, dtype=torch.bfloat16, max_seq_len=4096, download_dir='scratch/kaiyue_hf_cache', load_format=LoadFormat.AUTO, tensor_parallel_size=2, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=0, served_model_name=mistralai/Mistral-7B-Instruct-v0.3, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=False, chunked_prefill_enabled=False, use_async_output_proc=True, disable_mm_preprocessor_cache=False, mm_processor_kwargs=None, pooler_config=None, compilation_config={"splitting_ops":[],"compile_sizes":[],"cudagraph_capture_sizes":[256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":256}, use_cached_outputs=False, 
WARNING 02-09 16:11:09 multiproc_worker_utils.py:298] Reducing Torch parallelism from 2 threads to 1 to avoid unnecessary CPU contention. Set OMP_NUM_THREADS in the external environment to tune this value as needed.
INFO 02-09 16:11:10 custom_cache_manager.py:17] Setting Triton cache manager to: vllm.triton_utils.custom_cache_manager:CustomCacheManager
[1;36m(VllmWorkerProcess pid=3537079)[0;0m INFO 02-09 16:11:10 multiproc_worker_utils.py:227] Worker ready; awaiting tasks
INFO 02-09 16:11:11 cuda.py:225] Using Flash Attention backend.
[1;36m(VllmWorkerProcess pid=3537079)[0;0m INFO 02-09 16:11:11 cuda.py:225] Using Flash Attention backend.
INFO 02-09 16:11:12 utils.py:938] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=3537079)[0;0m INFO 02-09 16:11:12 utils.py:938] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=3537079)[0;0m INFO 02-09 16:11:12 pynccl.py:67] vLLM is using nccl==2.21.5
INFO 02-09 16:11:12 pynccl.py:67] vLLM is using nccl==2.21.5
[1;36m(VllmWorkerProcess pid=3537079)[0;0m INFO 02-09 16:11:12 custom_all_reduce_utils.py:242] reading GPU P2P access cache from /gpfs/radev/home/lx228/.cache/vllm/gpu_p2p_access_cache_for_0,1.json
INFO 02-09 16:11:12 custom_all_reduce_utils.py:242] reading GPU P2P access cache from /gpfs/radev/home/lx228/.cache/vllm/gpu_p2p_access_cache_for_0,1.json
INFO 02-09 16:11:12 shm_broadcast.py:256] vLLM message queue communication handle: Handle(connect_ip='127.0.0.1', local_reader_ranks=[1], buffer_handle=(1, 4194304, 6, 'psm_3b01987c'), local_subscribe_port=40859, remote_subscribe_port=None)
INFO 02-09 16:11:12 model_runner.py:1110] Starting to load model mistralai/Mistral-7B-Instruct-v0.3...
[1;36m(VllmWorkerProcess pid=3537079)[0;0m INFO 02-09 16:11:12 model_runner.py:1110] Starting to load model mistralai/Mistral-7B-Instruct-v0.3...
INFO 02-09 16:11:12 weight_utils.py:251] Using model weights format ['*.safetensors']
Loading safetensors checkpoint shards:   0% Completed | 0/3 [00:00<?, ?it/s]
[1;36m(VllmWorkerProcess pid=3537079)[0;0m INFO 02-09 16:11:12 weight_utils.py:251] Using model weights format ['*.safetensors']
Loading safetensors checkpoint shards:  33% Completed | 1/3 [00:04<00:09,  4.52s/it]
Loading safetensors checkpoint shards:  67% Completed | 2/3 [00:08<00:04,  4.31s/it]
Loading safetensors checkpoint shards: 100% Completed | 3/3 [00:13<00:00,  4.43s/it]
Loading safetensors checkpoint shards: 100% Completed | 3/3 [00:13<00:00,  4.42s/it]

[1;36m(VllmWorkerProcess pid=3537079)[0;0m INFO 02-09 16:11:26 model_runner.py:1115] Loading model weights took 6.7584 GB
INFO 02-09 16:11:26 model_runner.py:1115] Loading model weights took 6.7584 GB
[1;36m(VllmWorkerProcess pid=3537079)[0;0m INFO 02-09 16:11:30 worker.py:266] Memory profiling takes 3.60 seconds
[1;36m(VllmWorkerProcess pid=3537079)[0;0m INFO 02-09 16:11:30 worker.py:266] the current vLLM instance can use total_gpu_memory (79.14GiB) x gpu_memory_utilization (0.90) = 71.22GiB
[1;36m(VllmWorkerProcess pid=3537079)[0;0m INFO 02-09 16:11:30 worker.py:266] model weights take 6.76GiB; non_torch_memory takes 0.30GiB; PyTorch activation peak memory takes 0.27GiB; the rest of the memory reserved for KV Cache is 63.90GiB.
INFO 02-09 16:11:30 worker.py:266] Memory profiling takes 3.76 seconds
INFO 02-09 16:11:30 worker.py:266] the current vLLM instance can use total_gpu_memory (79.14GiB) x gpu_memory_utilization (0.90) = 71.22GiB
INFO 02-09 16:11:30 worker.py:266] model weights take 6.76GiB; non_torch_memory takes 0.30GiB; PyTorch activation peak memory takes 0.34GiB; the rest of the memory reserved for KV Cache is 63.83GiB.
INFO 02-09 16:11:30 executor_base.py:108] # CUDA blocks: 65365, # CPU blocks: 4096
INFO 02-09 16:11:30 executor_base.py:113] Maximum concurrency for 4096 tokens per request: 255.33x
[1;36m(VllmWorkerProcess pid=3537079)[0;0m INFO 02-09 16:11:31 model_runner.py:1430] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 02-09 16:11:32 model_runner.py:1430] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
Capturing CUDA graph shapes:   0%|          | 0/35 [00:00<?, ?it/s]Capturing CUDA graph shapes:   3%|▎         | 1/35 [00:00<00:11,  2.85it/s]Capturing CUDA graph shapes:   6%|▌         | 2/35 [00:00<00:11,  2.95it/s]Capturing CUDA graph shapes:   9%|▊         | 3/35 [00:01<00:10,  2.95it/s]Capturing CUDA graph shapes:  11%|█▏        | 4/35 [00:01<00:10,  2.96it/s]Capturing CUDA graph shapes:  14%|█▍        | 5/35 [00:01<00:10,  2.82it/s]Capturing CUDA graph shapes:  17%|█▋        | 6/35 [00:02<00:10,  2.89it/s]Capturing CUDA graph shapes:  20%|██        | 7/35 [00:02<00:09,  2.92it/s]Capturing CUDA graph shapes:  23%|██▎       | 8/35 [00:02<00:09,  2.95it/s]Capturing CUDA graph shapes:  26%|██▌       | 9/35 [00:03<00:08,  2.95it/s]Capturing CUDA graph shapes:  29%|██▊       | 10/35 [00:03<00:08,  2.96it/s]Capturing CUDA graph shapes:  31%|███▏      | 11/35 [00:03<00:08,  2.97it/s]Capturing CUDA graph shapes:  34%|███▍      | 12/35 [00:04<00:07,  2.98it/s]Capturing CUDA graph shapes:  37%|███▋      | 13/35 [00:04<00:07,  2.92it/s]Capturing CUDA graph shapes:  40%|████      | 14/35 [00:04<00:07,  2.84it/s]Capturing CUDA graph shapes:  43%|████▎     | 15/35 [00:05<00:06,  2.90it/s]Capturing CUDA graph shapes:  46%|████▌     | 16/35 [00:05<00:06,  2.93it/s]Capturing CUDA graph shapes:  49%|████▊     | 17/35 [00:05<00:06,  2.95it/s]Capturing CUDA graph shapes:  51%|█████▏    | 18/35 [00:06<00:05,  2.90it/s]Capturing CUDA graph shapes:  54%|█████▍    | 19/35 [00:06<00:05,  2.93it/s]Capturing CUDA graph shapes:  57%|█████▋    | 20/35 [00:06<00:05,  2.63it/s]Capturing CUDA graph shapes:  60%|██████    | 21/35 [00:07<00:06,  2.11it/s]Capturing CUDA graph shapes:  63%|██████▎   | 22/35 [00:08<00:06,  1.94it/s]Capturing CUDA graph shapes:  66%|██████▌   | 23/35 [00:08<00:05,  2.15it/s]Capturing CUDA graph shapes:  69%|██████▊   | 24/35 [00:08<00:04,  2.34it/s]Capturing CUDA graph shapes:  71%|███████▏  | 25/35 [00:09<00:03,  2.53it/s]Capturing CUDA graph shapes:  74%|███████▍  | 26/35 [00:09<00:03,  2.60it/s]Capturing CUDA graph shapes:  77%|███████▋  | 27/35 [00:09<00:02,  2.67it/s]Capturing CUDA graph shapes:  80%|████████  | 28/35 [00:10<00:02,  2.77it/s]Capturing CUDA graph shapes:  83%|████████▎ | 29/35 [00:10<00:02,  2.84it/s]Capturing CUDA graph shapes:  86%|████████▌ | 30/35 [00:11<00:01,  2.83it/s]Capturing CUDA graph shapes:  89%|████████▊ | 31/35 [00:11<00:01,  2.82it/s]Capturing CUDA graph shapes:  91%|█████████▏| 32/35 [00:11<00:01,  2.85it/s]Capturing CUDA graph shapes:  94%|█████████▍| 33/35 [00:12<00:00,  2.83it/s]Capturing CUDA graph shapes:  97%|█████████▋| 34/35 [00:12<00:00,  2.82it/s][1;36m(VllmWorkerProcess pid=3537079)[0;0m INFO 02-09 16:11:44 custom_all_reduce.py:224] Registering 2275 cuda graph addresses
Capturing CUDA graph shapes: 100%|██████████| 35/35 [00:13<00:00,  2.37it/s]Capturing CUDA graph shapes: 100%|██████████| 35/35 [00:13<00:00,  2.69it/s]
INFO 02-09 16:11:45 custom_all_reduce.py:224] Registering 2275 cuda graph addresses
[1;36m(VllmWorkerProcess pid=3537079)[0;0m INFO 02-09 16:11:45 model_runner.py:1558] Graph capturing finished in 13 secs, took 0.24 GiB
INFO 02-09 16:11:45 model_runner.py:1558] Graph capturing finished in 13 secs, took 0.24 GiB
INFO 02-09 16:11:45 llm_engine.py:429] init engine (profile, create kv cache, warmup model) took 18.81 seconds
vLLM engine initialized.
Processing dataset: project/Kaiyue/datasets/atomic_dataset_textonly.jsonl
Processing atomic_dataset_textonly:   0%|          | 0/187 [00:00<?, ?it/s]Processing atomic_dataset_textonly: 100%|██████████| 187/187 [00:00<00:00, 821293.03it/s]
INFO 02-09 16:11:45 chat_utils.py:330] Detected the chat template content format to be 'string'. You can set `--chat-template-content-format` to override this.
WARNING 02-09 16:11:45 chat_utils.py:990] 'add_generation_prompt' is not supported for mistral tokenizer, so it will be ignored.
WARNING 02-09 16:11:45 chat_utils.py:994] 'continue_final_message' is not supported for mistral tokenizer, so it will be ignored.
Processed prompts:   0%|          | 0/187 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]